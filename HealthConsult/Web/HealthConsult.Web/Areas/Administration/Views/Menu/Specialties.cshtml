@model SpecialtyViewModel
@using HealthConsult.Web.Areas.Administration.Models;
@{
    ViewBag.Title = "Specialties";
}

<h2>Specialties</h2>

@Html.AntiForgeryToken()

@(Html.Kendo().Grid<SpecialtyViewModel>()
    .Name("grid-specialties")
    .Columns(columns =>
    {
        columns.Bound(model => model.Name);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(200);
    })
    .DataSource(data =>
        {
            data.Ajax()
                .Model(m => m.Id(h => h.Id))
                .PageSize(7)
                .ServerOperation(true)
                .Read(read => read.Action("ReadSpecialties", "Specialties").Data("sendAntiForgery"))
                .Update(update => update.Action("UpdateSpecialties", "Specialties").Data("sendAntiForgery"))
                .Destroy(del => del.Action("DeleteSpecialties", "Specialties").Data("sendAntiForgery"))
                .Create(create => create.Action("CreateSpecialties", "Specialties").Data("sendAntiForgery"))
                .Events(events => events.Sync("sync_handler"));
        }
    )
    .Sortable()
    .Pageable()
    .ToolBar(toolbar => toolbar.Create())
    .Editable(
            e => e.Mode(GridEditMode.PopUp).TemplateName("SpecialtyTemplate").Window(w => w.Title("Add/Edit Specialists").Width(420))
    )
    .Filterable()
    .Resizable(resize => resize.Columns(true))
    .Selectable()
)

<script type="text/javascript">
    function sendAntiForgery() {
        return { "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() }
    }

    function sync_handler(e) {
        this.read();
    }
</script>


